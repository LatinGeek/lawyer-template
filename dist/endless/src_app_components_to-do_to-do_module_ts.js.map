{"version":3,"file":"src_app_components_to-do_to-do_module_ts.js","mappings":"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","sources":["./src/app/components/to-do/to-do-routing.module.ts","./src/app/components/to-do/to-do.component.ts","./src/app/components/to-do/to-do.component.html","./src/app/components/to-do/to-do.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ToDoComponent } from './to-do.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ToDoComponent,\r\n        data: {\r\n          title: \"To-Do\",\r\n          breadcrumb: \"\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ToDoRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as data from '../../shared/data/todo/todo';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport interface Task {\r\n  text: string\r\n  completed: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-to-do',\r\n  templateUrl: './to-do.component.html',\r\n  styleUrls: ['./to-do.component.scss']\r\n})\r\nexport class ToDoComponent implements OnInit {\r\n\r\n  public text: string;\r\n  public todos: Task[] = data.task;\r\n  public completed: boolean;\r\n  public red_border: boolean = false;\r\n  public visible: boolean\r\n\r\n  constructor(private toastrService: ToastrService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  public addTask(text) {\r\n    if (!text) {\r\n      this.red_border = true;\r\n      return false;\r\n    }\r\n    let task = { text: text, completed: false }\r\n    this.todos.push(task);\r\n    this.text = '';\r\n    this.red_border = false;\r\n  }\r\n\r\n  public taskCompleted(task) {\r\n    task.completed = !task.completed\r\n    task.completed ? this.toastrService.success(task.text, \"Mark as completed\") : this.toastrService.error(task.text, \"Mark as Incompleted\")\r\n  }\r\n\r\n  public taskDeleted(index) {\r\n    this.todos.splice(index, 1);\r\n  }\r\n\r\n  public markAllAction(action) {\r\n    this.todos.filter(task => {\r\n      task.completed = action\r\n    })\r\n    this.completed = action\r\n    action ? this.toastrService.success(\"All Task as Completed\") : this.toastrService.error(\"All Task as Incompleted\")\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5>To-Do</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"todo\">\r\n            <div class=\"todo-list-wrapper\">\r\n              <div class=\"todo-list-container\">\r\n                <div class=\"mark-all-tasks\">\r\n                  <div class=\"mark-all-tasks-container\">\r\n                    <span class=\"mark-all-btn\" [ngClass]=\"{'move-up':completed}\" id=\"mark-all-finished\" role=\"button\">\r\n                      <span class=\"btn-label\">Mark all as finished</span>\r\n                      <span class=\"action-box completed\" (click)=\"markAllAction(true);\">\r\n                        <i class=\"icon\"><i class=\"icon-check\"></i></i>\r\n                      </span>\r\n                    </span>\r\n                    <span class=\"mark-all-btn\" [ngClass]=\"{'move-down':!completed}\" id=\"mark-all-incomplete\"\r\n                      role=\"button\">\r\n                      <span class=\"btn-label\">Mark all as completed</span>\r\n                      <span class=\"action-box\" (click)=\"markAllAction(false);\">\r\n                        <i class=\"icon\"><i class=\"icon-check\"></i></i>\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"todo-list-body\">\r\n                  <ul id=\"todo-list\">\r\n                    <li class=\"task\" [ngClass]=\"{'completed':todo.completed}\" *ngFor=\"let todo of todos;let i=index\">\r\n                      <div class=\"task-container\">\r\n                        <h4 class=\"task-label\">{{todo.text}}</h4>\r\n                        <span class=\"task-action-btn\">\r\n                          <span class=\"action-box large delete-btn\" title=\"Delete Task\" (click)=\"taskDeleted(i)\"><i\r\n                              class=\"icon\"><i class=\"icon-trash\"></i></i></span>\r\n                          <span class=\"action-box large complete-btn\" title=\"Mark Complete\"\r\n                            (click)=\"taskCompleted(todo)\"><i class=\"icon\"><i class=\"icon-check\"></i></i></span>\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"todo-list-footer\">\r\n                  <div class=\"add-task-btn-wrapper\">\r\n                    <span class=\"add-task-btn\" [ngClass]=\"{'hide':visible}\">\r\n                      <button class=\"btn btn-primary\" (click)=\"visible=true\">\r\n                        <i class=\"icon-plus me-1\"></i>Add new task\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"new-task-wrapper\" [ngClass]=\"{'visible':visible}\">\r\n                    <textarea id=\"new-task\" placeholder=\"Enter new task here. . .\" [(ngModel)]=\"text\"\r\n                      [class.border-danger]=\"red_border\"></textarea>\r\n                    <button class=\"btn btn-danger cancel-btn me-3\" id=\"close-task-panel\"\r\n                      (click)=\"visible=false\">Close</button>\r\n                    <button class=\"btn btn-success add-new-task-btn\" id=\"add-task\" (click)=\"addTask(text)\">Add\r\n                      Task</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"notification-popup hide\">\r\n              <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ToDoRoutingModule } from './to-do-routing.module';\r\nimport { ToDoComponent } from './to-do.component';\r\n\r\n@NgModule({\r\n  declarations: [ToDoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ToDoRoutingModule\r\n  ]\r\n})\r\nexport class ToDoModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}