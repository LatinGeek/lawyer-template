{"version":3,"file":"src_app_components_contact_contact_module_ts.js","mappings":"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","sources":["./src/app/components/contact/contact-routing.module.ts","./src/app/components/contact/contact.module.ts","./src/app/components/contact/contacts/contacts.component.ts","./src/app/components/contact/contacts/contacts.component.html","./src/app/components/contact/edit-user/edit-user.component.ts","./src/app/components/contact/edit-user/edit-user.component.html","./src/app/components/contact/new-user/new-user.component.ts","./src/app/components/contact/new-user/new-user.component.html","./src/app/shared/services/firebase/contact.service.ts","./src/app/shared/services/firebase/edit-user.resolver.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { EditUserResolver } from '../../shared/services/firebase/edit-user.resolver';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'new-user',\r\n        component: NewUserComponent,\r\n        data: {\r\n          title: \"New User\",\r\n          breadcrumb: \"New User\"\r\n        }\r\n      },\r\n      {\r\n        path: 'contacts',\r\n        component: ContactsComponent,\r\n        data: {\r\n          title: \"Contact\",\r\n          breadcrumb: \"Contact\"\r\n        }\r\n      },\r\n      {\r\n        path: 'edit-user/:id',\r\n        component: EditUserComponent,\r\n        resolve: {\r\n          data: EditUserResolver\r\n        },\r\n        data: {\r\n          title: \"Edit User\",\r\n          breadcrumb: \"Edit User\"\r\n        }\r\n      },\r\n    ]\r\n\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContactRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContactRoutingModule } from './contact-routing.module';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {ContactService} from '../../shared/services/firebase/contact.service';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport {EditUserResolver} from '../../shared/services/firebase/edit-user.resolver';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import { HttpModule } from '@angular/http';\r\nimport { Ng5SliderModule } from 'ng5-slider';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n@NgModule({\r\n  declarations: [NewUserComponent, ContactsComponent, EditUserComponent],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    ContactRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    // HttpModule,\r\n    Ng5SliderModule,\r\n    Ng2SearchPipeModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n\r\n  providers: [ContactService, EditUserResolver]\r\n})\r\nexport class ContactModule { }\r\n","import { Component, OnInit, Output } from '@angular/core';\r\nimport { ContactService } from '../../../shared/services/firebase/contact.service';\r\nimport { Router } from '@angular/router';\r\nimport { Options, ChangeContext, PointerType, LabelType } from 'ng5-slider';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.scss']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n\r\n  public searchValue: string = \"\";\r\n  public items: Array<any>;\r\n  public age_filtered_items: Array<any>;\r\n  public name_filtered_items: Array<any>;\r\n  public user: any;\r\n  public age: any;\r\n  public sidebaron: any;\r\n  public listView: any;\r\n\r\n  constructor(private contactService: ContactService, private router: Router,private toastr :ToastrService) { }\r\n\r\n  showDelete() {\r\n    this.toastr.error('User Deleted !');\r\n  }\r\n\r\n \r\n\r\n  public logText: string = '';\r\n  public min: number;\r\n  public value: number = 10;\r\n  public highValue: number = 50;\r\n  public options: Options = {\r\n    floor: 0,\r\n    ceil: 100,\r\n  };\r\n\r\n  onUserChangeStart(changeContext: ChangeContext): void {\r\n    this.logText += `onUserChangeStart(${this.getChangeContextString(changeContext)})\\n`;\r\n  }\r\n\r\n  onUserChange(changeContext: ChangeContext): void {\r\n    this.logText += `onUserChange(${this.getChangeContextString(changeContext)})\\n`;\r\n  }\r\n\r\n  onUserChangeEnd(changeContext: ChangeContext): void {\r\n    this.logText += `onUserChangeEnd(${this.getChangeContextString(changeContext)})\\n`;\r\n  }\r\n\r\n  getChangeContextString(changeContext: ChangeContext): void {\r\n    this.min = changeContext.value;\r\n    this.age = changeContext.value;\r\n    this.rangeChange(this.age);\r\n  }\r\n\r\n  searchByName() {\r\n    let value = this.searchValue.toLowerCase();\r\n    this.contactService.searchUsers(value)\r\n      .subscribe(result => {\r\n        this.name_filtered_items = result;\r\n        this.items = this.combineLists(result, this.age_filtered_items);\r\n      })\r\n  }\r\n\r\n  rangeChange(event) {\r\n    this.contactService.searchUsersByAge(event)\r\n      .subscribe(result => {\r\n        this.age_filtered_items = result;\r\n        this.items = this.combineLists(result, this.name_filtered_items);\r\n      })\r\n  }\r\n\r\n  combineLists(a, b) {\r\n    let result = [];\r\n\r\n    a.filter(x => {\r\n      return b.filter(x2 => {\r\n        if (x2.payload.doc.id == x.payload.doc.id) {\r\n          result.push(x2);\r\n        }\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n\r\n  delete(contactId) {\r\n    this.contactService.deleteUser(contactId)\r\n      .then(\r\n        res => {\r\n          this.router.navigate(['/contact/contacts']);\r\n          this.showDelete();\r\n        },\r\n        err => {\r\n        }\r\n      )\r\n  }\r\n\r\n  getData() {\r\n    this.contactService.getUsers()\r\n      .subscribe(result => {\r\n        this.items = result;\r\n        this.age_filtered_items = result;\r\n        this.name_filtered_items = result;\r\n      })\r\n  }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid product-wrapper\" [class.sidebaron]=\"sidebaron\">\r\n    <div class=\"product-grid\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6\">\r\n                        <form class=\"search-form contact-search\">\r\n                            <div class=\"form-group mb-0\">\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"searchValue\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" placeholder=\"Search by name...\"\r\n                                    (keyup)=\"searchByName()\">\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"col-xl-6\">\r\n                        <div class=\"contact-filter\">\r\n                            <h5 class=\"mb-0 me-2\">Filter By Age</h5>\r\n                            <ng5-slider [(value)]=\"value\" [options]=\"options\"\r\n                                (userChangeStart)=\"onUserChangeStart($event)\" (userChange)=\"onUserChange($event)\"\r\n                                (userChangeEnd)=\"onUserChangeEnd($event)\"></ng5-slider>\r\n                            <button class=\"btn btn-primary me-2\" [routerLink]=\"['/contact/new-user']\"><i\r\n                                    >ADD</i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"product-wrapper-grid\" [class.list-view]=\"listView\" style=\"opacity: 1;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"product-box table-responsive contact-table\">\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            <h5 class=\"mb-0\">Profile</h5>\r\n                                        </th>\r\n                                        <th>\r\n                                            <h5 class=\"mb-0\">Name</h5>\r\n                                        </th>\r\n                                        <th>\r\n                                            <h5 class=\"mb-0\">Surname</h5>\r\n                                        </th>\r\n                                        <th>\r\n                                            <h5 class=\"mb-0\">Mobile</h5>\r\n                                        </th>\r\n                                        <th colspan=\"2\">\r\n                                            <h5 class=\"mb-0\">Age</h5>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let item of items\">\r\n                                    <tr>\r\n                                        <td><img class=\"img-60 rounded-circle\" src=\"{{item.payload.doc.data().avatar}}\"\r\n                                                alt=\"#\"></td>\r\n                                        <td>\r\n                                            <h6>{{item.payload.doc.data().name}}</h6>\r\n                                        </td>\r\n                                        <td>\r\n                                            <h6>{{item.payload.doc.data().surname}}</h6>\r\n                                        </td>\r\n                                        <td>\r\n                                            <h6>{{item.payload.doc.data().mobile}}</h6>\r\n                                        </td>\r\n                                        <td>\r\n                                            <h6>{{item.payload.doc.data().age}}</h6>\r\n                                        </td>\r\n                                        <td><a class=\"btn btn-primary me-2\"\r\n                                                [routerLink]=\"['/contact/edit-user',item.payload.doc.id]\">Edit</a>\r\n                                            <button class=\"btn btn-secondary\" \r\n                                                (click)=\"delete(item.payload.doc.id)\">Delete</button></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                          \r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div *ngIf=\"!items?.length\">\r\n                <div class=\"search-not-found text-center\">\r\n                    <div>\r\n                    <img src=\"assets/images/search-not-found.png\" alt=\"\" class=\"second-search\">\r\n                    <p>Sorry, We didn't find any results matching this search</p>\r\n                </div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { ContactService } from '../../../shared/services/firebase/contact.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.scss']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  public contactForm: FormGroup;\r\n  public errorMessage: any;\r\n  public url: any;\r\n  public item: any;\r\n  public avatar: any;\r\n  public sidebaron: any;\r\n\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private contactService: ContactService,private toastr :ToastrService) {}\r\n\r\n  createForm() {\r\n    this.contactForm = this.fb.group({\r\n      name: [this.item.name, Validators.required],\r\n      surname: [this.item.surname, Validators.required],\r\n      mobile: [this.item.mobile, Validators.required],\r\n      age: [this.item.age, Validators.required]\r\n    });\r\n  }\r\n\r\n  save(value) {\r\n    value.avatar = this.avatar;\r\n    value.age = Number(value.age);\r\n    this.contactService.updateUser(this.item.id, value)\r\n      .then(\r\n        res => {\r\n          this.router.navigate(['/contact/contacts']);\r\n          this.showEdit();\r\n        }\r\n      )\r\n  }\r\n\r\n  showEdit(){\r\n    this.toastr.success('User Updated!');\r\n  }\r\n\r\n  //FileUpload\r\n  readUrl(event: any) {\r\n    if (event.target.files.length === 0)\r\n      return;\r\n    //Image upload validation\r\n    var mimeType = event.target.files[0].type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    // Image upload\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (_event) => {\r\n      this.avatar = reader.result;\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/contact/contacts']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(routeData => {\r\n      let data = routeData['data'];\r\n      if (data) {\r\n        this.avatar = data.payload.data().avatar;\r\n        this.item = data.payload.data();\r\n        this.item.id = data.payload.id;\r\n        this.createForm();\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\" [class.sidebaron]=\"sidebaron\">\n    <div class=\"\">\n        <div class=\"authentication-box contact-profile-form\">\n            <div class=\"text-center\"><img src=\"assets/images/endless-logo.png\" alt=\"\"></div>\n            <div class=\"card mt-4\">\n                <div class=\"card-body\">\n                    <div class=\"text-center user-profile\">\n                        <div class=\"hovercard\">\n                            <div class=\"contact-profile\">\n                                <img class=\"rounded-circle img-100\" alt=\"\" [src]=\"avatar\">\n                                <div class=\"icon-wrapper\"><i class=\"icofont icofont-pencil-alt-5\"><input class=\"upload\"\n                                            type=\"file\" (change)=\"readUrl($event)\" /></i></div>\n                            </div>\n                        </div>\n                    </div>\n                    <form [formGroup]=\"contactForm\">\n                        <div class=\"form-group\">\n                            <label class=\"col-form-label pt-0\" for=\"name\">Name</label>\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\">\n                            <div *ngIf=\"contactForm.controls.name.touched && contactForm.controls.name.errors?.required\"\n                                class=\"text text-danger mt-1\">\n                                name is required\n                            </div>\n                            <div *ngIf=\"contactForm.controls.name.touched && contactForm.controls.name.errors?.name\"\n                                class=\"text text-danger mt-1\">\n                                Invalid name -->\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-form-label\" for=\"surname\">Surname</label>\n                            <input type=\"text\" formControlName=\"surname\" class=\"form-control\">\n                            <div *ngIf=\"contactForm.controls.surname.touched && contactForm.controls.surname.errors?.required\"\n                                class=\"text text-danger mt-1\">\n                                surname is required\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-form-label\" for=\"mobile\">Mobile</label>\n                            <input type=\"number\" formControlName=\"mobile\" class=\"form-control\">\n                            <div *ngIf=\"contactForm.controls.mobile.touched && contactForm.controls.mobile.errors?.required\"\n                                class=\"text text-danger mt-1\">\n                                mobile is required\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-form-label\" for=\"age\">Age</label>\n                            <input type=\"number\" formControlName=\"age\" class=\"form-control\">\n                            <div *ngIf=\"contactForm.controls.mobile.touched && contactForm.controls.mobile.errors?.required\"\n                                class=\"text text-danger mt-1\">\n                                age is required\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row mt-3 mb-0\">\n                            <button class=\"btn btn-primary mb-2\" [disabled]=\"!contactForm.valid\"\n                                (click)=\"save(contactForm.value)\" type=\"submit\"> Save\n                            </button>\n                            <button class=\"btn btn-primary\" type=\"button\" data-original-title=\"btn btn-info-gradien\"\n                                (click)=\"cancel()\" title=\"\">\n                                Cancel</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { ContactService } from '../../../shared/services/firebase/contact.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\ntype UserFields = 'name' | 'surname' | 'mobile' | 'profileImg' | 'age';\r\ntype FormErrors = { [u in UserFields]: string };\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n  contactDetail: any;\r\n  public contactForm: FormGroup;\r\n  public sidebaron: any;\r\n  public formErrors: FormErrors = {\r\n    'name': '',\r\n    'surname': '',\r\n    'mobile': '',\r\n    'profileImg': '',\r\n    'age': ''\r\n  };\r\n  public errorMessage: any;\r\n  public url: any;\r\n  public avatraLink: any;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private contactService: ContactService,private toastr:ToastrService) {\r\n    this.contactForm = new FormGroup({\r\n      name: new FormControl(),\r\n      surname: new FormControl(),\r\n      mobile: new FormControl(),\r\n      age: new FormControl()\r\n    });\r\n  }\r\n\r\n  resetFields() {\r\n    this.contactForm = this.fb.group({\r\n      name: new FormControl('', Validators.required),\r\n      surname: new FormControl('', Validators.required),\r\n      mobile: new FormControl('', Validators.required),\r\n      age: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n  showSuccess(){\r\n    this.toastr.success('User Created!');\r\n  }\r\n\r\n  submit(value) {\r\n    this.contactService.createUser(value, this.url)\r\n      .then(\r\n        res => {\r\n          this.resetFields();\r\n          this.router.navigate(['/contact/contacts']);\r\n          this.showSuccess()\r\n        }\r\n      )\r\n  }\r\n\r\n  //FileUpload\r\n  readUrl(event: any) {\r\n    if (event.target.files.length === 0)\r\n      return;\r\n    //Image upload validation\r\n    var mimeType = event.target.files[0].type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    // Image upload\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (_event) => {\r\n      this.url = reader.result;\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/contact/contacts']);\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\" [class.sidebaron]=\"sidebaron\">\r\n    <div class=\"\">\r\n        <div class=\"authentication-box contact-profile-form\">\r\n            <div class=\"text-center\"><img src=\"assets/images/endless-logo.png\" alt=\"\"></div>\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"text-center user-profile\">\r\n                        <div class=\"hovercard\">\r\n                            <div class=\"contact-profile\">\r\n                                <img class=\"rounded-circle img-100\" alt=\"\"\r\n                                    [src]=\"url? url:'assets/images/user/user.png'\">\r\n                                <div class=\"icon-wrapper\"><i class=\"icofont icofont-pencil-alt-5\"><input class=\"upload\"\r\n                                            type=\"file\" (change)=\"readUrl($event)\" /></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <form class=\"theme-form\" [formGroup]=\"contactForm\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-form-label pt-0\">Name</label>\r\n                            <input class=\"form-control\" formControlName=\"name\" type=\"text\" required=\"\">\r\n                            <div *ngIf=\"contactForm.controls.name.touched && contactForm.controls.name.errors?.required\"\r\n                                class=\"text text-danger mt-1\">\r\n                                name is required\r\n                            </div>\r\n                            <div *ngIf=\"contactForm.controls.name.touched && contactForm.controls.name.errors?.name\"\r\n                                class=\"text text-danger mt-1\">\r\n                                Invalid name\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-form-label\">Surname</label>\r\n                            <input class=\"form-control\" type=\"text\" formControlName=\"surname\" required=\"\">\r\n                            <div *ngIf=\"contactForm.controls.surname.touched && contactForm.controls.surname.errors?.required\"\r\n                                class=\"text text-danger mt-1\">\r\n                                surname is required\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-form-label\">Mobile</label>\r\n                            <input class=\"form-control\" type=\"number\" formControlName=\"mobile\" required=\"\">\r\n                            <div *ngIf=\"contactForm.controls.mobile.touched && contactForm.controls.mobile.errors?.required\"\r\n                                class=\"text text-danger mt-1\">\r\n                                mobile is required\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-form-label\">Age</label>\r\n                            <input class=\"form-control\" type=\"number\" formControlName=\"age\" required=\"\">\r\n                            <div *ngIf=\"contactForm.controls.mobile.touched && contactForm.controls.mobile.errors?.required\"\r\n                                class=\"text text-danger mt-1\">\r\n                                age is required\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row mt-3 mb-0\">\r\n                            <button class=\"btn btn-primary mb-2\" [disabled]=\"!contactForm.valid\"\r\n                                (click)=\"submit(contactForm.value)\" type=\"submit\"> Submit\r\n                            </button>\r\n                            <button class=\"btn btn-primary\" type=\"button\" data-original-title=\"btn btn-info-gradien\"\r\n                                (click)=\"cancel()\" title=\"\">\r\n                                Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n  constructor(public db: AngularFirestore) { }\r\n\r\n  createUser(value, avatar) {\r\n    return this.db.collection('usersContact').add({\r\n      age: parseInt(value.age),\r\n      mobile: parseInt(value.mobile),\r\n      name: value.name,\r\n      surname: value.surname,\r\n      avatar: avatar ? avatar : 'assets/images/user/user.png',\r\n      nameToSearch: value.name.toLowerCase()\r\n    });\r\n  }\r\n\r\n  updateUser(userKey, value) {\r\n    value.nameToSearch = value.name.toLowerCase();\r\n    return this.db.collection('usersContact').doc(userKey).set(value);\r\n  }\r\n\r\n  searchUsers(searchValue) {\r\n    return this.db.collection('usersContact', ref => ref.where('nameToSearch', '>=', searchValue)\r\n      .where('nameToSearch', '<=', searchValue + '\\uf8ff'))\r\n      .snapshotChanges()\r\n  }\r\n\r\n  searchUsersByAge(value) {\r\n    return this.db.collection('usersContact', ref => ref.orderBy('age').startAt(value)).snapshotChanges();\r\n  }\r\n\r\n  getUser(userKey) {\r\n    return this.db.collection('usersContact').doc(userKey).snapshotChanges();\r\n  }\r\n  getUsers() {\r\n    return this.db.collection('usersContact').snapshotChanges();\r\n  }\r\n\r\n  deleteUser(contactKey) {\r\n    return this.db.collection('usersContact').doc(contactKey).delete();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, ActivatedRoute } from \"@angular/router\";\r\nimport { ContactService } from './contact.service';\r\n\r\n@Injectable()\r\nexport class EditUserResolver implements Resolve<any> {\r\n\r\n  constructor(public contectService: ContactService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, ) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let userId = route.paramMap.get('id');\r\n      this.contectService.getUser(userId)\r\n        .subscribe(\r\n          data => {\r\n            resolve(data);\r\n          }\r\n        );\r\n    })\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///"}